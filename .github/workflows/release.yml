name: Publish release to Maven Central
on:
  workflow_dispatch:
    inputs:
      versionName:
        description: "Please, enter a version name. (Version name cannot contain -SNAPSHOT)"
        required: true

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Setup Java JDK 17
        uses: actions/setup-java@v5.0.0
        with:
          java-version: 17
          distribution: temurin
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Gradle tasks
        run: ./gradlew tasks

      - name: Check Version Name
        if: contains(github.event.inputs.versionName, '-SNAPSHOT')
        run: |
          echo "‚ö†Ô∏è ERROR: SNAPSHOT versions cannot be published via this workflow!"
          exit 1

      - name: Publish Library to Maven Central
        run: |
          echo "Publishing the Library üöÄ"
          VERSION=${{ github.event.inputs.versionName }}
          echo "Version name $VERSION"
          ./gradlew publishAndReleaseToMavenCentral -PlibraryVersion=$VERSION --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYPASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALPASSWORD }}

      - name: Create tag
        run: |
          git config --local user.email "zenginsuat.inf@gmail.com"
          git config --local user.name "Suat Zengin"
          git tag -a "v${{ github.event.inputs.versionName }}" -m "Release ${{ github.event.inputs.versionName }}"
          git push origin "v${{ github.event.inputs.versionName }}"

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ github.event.inputs.versionName }}"
          release_name: "Release v${{ github.event.inputs.versionName }}"
          body: |
            ## üéâ Version ${{ github.event.inputs.versionName }}
          draft: false
          prerelease: false